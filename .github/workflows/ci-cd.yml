name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: kniag
          POSTGRES_PASSWORD: marmalad
          POSTGRES_DB: booknest-test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install Dependencies
      run: |
        cd backend
        npm ci
        cd ../frontend
        npm ci

    - name: Run Backend Tests
      run: |
        cd backend
        npm test
      env:
        DATABASE_URL: postgresql://kniag:marmalad@localhost:5432/booknest-test
        JWT_SECRET: test_secret
        NODE_ENV: test

    - name: Run ESLint
      run: |
        cd backend
        npm run lint
        cd ../frontend
        npm run lint

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install Dependencies
      run: |
        cd backend
        npm ci
        cd ../frontend
        npm ci

    - name: Build Frontend
      run: |
        cd frontend
        npm run build

    - name: Build Backend
      run: |
        cd backend
        npm run build

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          backend/dist
          frontend/build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Download Build Artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts